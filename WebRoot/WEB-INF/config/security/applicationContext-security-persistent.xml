<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
   
    <bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
	  <property name='securityContextRepository'>
	    <bean class='org.springframework.security.web.context.HttpSessionSecurityContextRepository'>
	      <property name='allowSessionCreation' value='false'/>
		</bean>
	  </property>
	</bean>
	
	<bean id="abstractAuthenticationProcessingFilter" class="org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter" abstract="true">
	  <property name="authenticationSuccessHandler">
	  	<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
	  		<constructor-arg value="/page/login/welcome.jsp"/>
	  	</bean>
	  </property> 
	  <property name="authenticationFailureHandler">
	  	<bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
	  		<property name="defaultFailureUrl" value="/login.jsp"/>
	  	</bean>
	  </property>
	</bean>
	
	<!--  usernameParameter or passwordParameter or filterProcessesUrl 均可以通过配置修改-->
	<bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter" parent="abstractAuthenticationProcessingFilter">
	  <property name="authenticationManager" ref="authenticationManager"/>
	  <property name="usernameParameter" value="username"/>
	  <property name="passwordParameter" value="password"/>
	  <property name="filterProcessesUrl" value="/login.action"/>
	</bean>
    
    <!--  BasicAuthenticationFilter 
    <bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
	  <property name="authenticationManager" ref="authenticationManager"/>
	  <property name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint"/>
	</bean>
	
	<bean id="basicAuthenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
	  <property name="realmName" value="jdbcRealm"/>
	</bean>
	-->
	
	<!-- logout -->
	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg>
			<bean class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler"/>
		</constructor-arg>
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
					<constructor-arg value="JSESSIONID"/>
				</bean>
			</list>
		</constructor-arg>
	</bean>
    
    <!-- exception -->
    <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
	   <property name="authenticationEntryPoint" ref="loginAuthenticationEntryPoint"/>
	   <property name="accessDeniedHandler" ref="accessDeniedHandler"/>
	</bean>
	
	<bean id="loginAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
	   <property name="loginFormUrl" value="/login.jsp"/>
	</bean>
	
	<bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
	   <property name="errorPage" value="/login.jsp"/>
	</bean>
	
	<!-- authentication -->
	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
	   <property name="providers">
			<list>
				 <ref local="daoAuthenticationProvider"/>
			</list>
		</property>
	</bean>
	
	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
	   <property name="userDetailsService" ref="userDetailsService"/>
	   <!-- 密码加密 具体加密算法参见 org.springframework.security.authentication.encoding -->
	   <!--<property name="passwordEncoder" ref=""/>-->
	</bean>
	
	<!-- 存在一个属性usersByUsernameQuery设置sql查询语句,详情参见JdbcDaoImpl -->
	<bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
	   <property name="dataSource" ref="dataSource"/>
	   <!-- 默认使用的查询语句是 select username,authority from authorities where username = ?"-->
	   <!-- <property name="usersByUsernameQuery">
	   		<value>select username,password true from users where username = ?</value>
	   </property>
	    -->
	</bean>
	
	<!-- session management -->
	<bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
		<constructor-arg>
			<bean class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>
		</constructor-arg>
		<property name="invalidSessionStrategy">
			<bean class="org.springframework.security.web.session.SimpleRedirectInvalidSessionStrategy">
				<constructor-arg value="/timeout.jsp"/>
			</bean>
		</property>
		<property name="sessionAuthenticationStrategy">
			<bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>
		</property>
	</bean>
	
	<bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<property name="sessionRegistry">
			<bean class="org.springframework.security.core.session.SessionRegistryImpl"/>
		</property>
		<property name="expiredUrl" value="/timeout.jsp"/>
	</bean>

</beans>
